plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.3'
}

group = 'net.staticstudios'
version = '2.0.5-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "StaticStudios"
        url = 'https://repo.staticstudios.net/private/'
        // To set up credentials go to the .gradle directory in you user home and create a gradle.properties file.
        // There you put a "StaticStudiosUsername" field with your username and a "StaticStudiosPassword" field with the repo secret.
        credentials(org.gradle.api.credentials.PasswordCredentials.class)
    }
}

dependencies {
    implementation 'com.impossibl.pgjdbc-ng:pgjdbc-ng:0.8.9'
    implementation 'com.zaxxer:HikariCP:5.1.0'
    implementation 'redis.clients:jedis:5.1.2'
    implementation 'net.staticstudios:static-utils:1.0.1'

    testImplementation(platform('org.junit:junit-bom:5.10.3'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation('org.junit-pioneer:junit-pioneer:2.3.0');
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')

    testImplementation("org.testcontainers:postgresql:1.19.8")
    testImplementation("com.redis:testcontainers-redis:2.2.2")
    testImplementation("org.slf4j:slf4j-log4j12:2.0.16")
}

tasks.named('build') {
    dependsOn(shadowJar)
}

tasks.named("publish") {
    dependsOn(build)
}

test {
    useJUnitPlatform()
}

java {
    withSourcesJar()
    withJavadocJar()
}

javadoc {
    options.tags = ["implSpec", "apiNote", "implNote"]
}

publishing {
    repositories {
        maven {
            credentials(org.gradle.api.credentials.PasswordCredentials.class)
            name = "StaticStudios"
            setUrl("https://repo.staticstudios.net/private/")
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Static Data'
                description = 'Data library used by StaticStudios.'
                url = 'https://github.com/StaticStudios/static-data'
                developers {
                    developer {
                        id = 'staticstudios'
                        name = 'Static Studios'
                        email = 'support@staticstudios.net'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/StaticStudios/static-data.git'
                    developerConnection = 'scm:git:ssh://github.com:StaticStudios/static-data.git'
                    url = 'https://github.com/StaticStudios/static-data'
                }
            }
        }
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}
